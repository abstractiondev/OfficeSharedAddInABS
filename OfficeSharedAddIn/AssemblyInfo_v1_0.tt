<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".designer.cs" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="System.Xml.dll" #>
<#@ Assembly Name="System.Xml.Linq.dll" #>
<#@ Assembly Name="System.Windows.Forms.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Xml.Serialization" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ include file="..\..\abscommon\CommonInclude\Common\CommonCodeblocks.ttinclude" #>
<#@ include file="PowerPointAddIn_v1_0.ttinclude" #>
<#   
	// Abstraction(s) that are supposed to be shared must be shared by default.
	// This is simply because any change to "shared" makes it modified compared to the shared version.
	// Thus making abstraction "local" allows also making the changes that make it behave like "local".
	// To make the abstraction "local" make following changes:
	// 1. Modify the output - directive right on top of the file (2nd line) from "?" to ".designer.cs"
	// 2. Set the AbstractionShareLevel below to Shared 
	// 3. After the changes, the abstraction starts to generate its output right below the template:
	// - Change the .cs file properties so that it doesn't compile in the abstraction-project
	// - Link the output .cs file to appropriate projects (to replace the links from AbstractionContent/Out directory)
	// 4. If necessary, copy over and alter the include-files specified for common includes
	
	// ShareLevel = AbstractionShareLevel.Shared;


	string directoryName = GetContentDirectoryFromTemplateFullPath(Host.TemplateFile, IsLocal == false);
	string[] xmlFileNames = Directory.GetFiles(directoryName, "*.xml");
	
	foreach(string xmlFileName in xmlFileNames)
	{
		PowerPointAddInAbstraction abstraction = LoadXml<PowerPointAddInAbstraction>(xmlFileName);
		GenerateAssemblyInfo(abstraction);
	}
	
	if(IsLocal == false)
	{
		WriteContentToSingleOutput(Host.TemplateFile, ".designer.cs");
	}

#>
<#+ 
	void GenerateAssemblyInfo(PowerPointAddInAbstraction abstraction)
	{
		PowerPointAddInType addIn = abstraction.PowerPointAddIn;
		string keyfileName = addIn.name + ".snk";
		#>
			using System.Reflection;
			using System.Runtime.CompilerServices;
			using System.Runtime.InteropServices;
			using System.Security;

			// General Information about an assembly is controlled through the following 
			// set of attributes. Change these attribute values to modify the information
			// associated with an assembly.
			[assembly: AssemblyTitle("<#= addIn.title #>")]
			[assembly: AssemblyDescription("<#= addIn.description #>")]
			[assembly: AssemblyConfiguration("")]
			[assembly: AssemblyCompany("")]
			[assembly: AssemblyProduct("<#= addIn.product #>")]
			[assembly: AssemblyCopyright("<#= addIn.copyright #>")]
			[assembly: AssemblyTrademark("")]
			[assembly: AssemblyCulture("")]

			// Setting ComVisible to false makes the types in this assembly not visible 
			// to COM components.  If you need to access a type in this assembly from 
			// COM, set the ComVisible attribute to true on that type.
			[assembly: ComVisible(true)]

			// Version information for an assembly consists of the following four values:
			//
			//      Major Version
			//      Minor Version 
			//      Build Number
			//      Revision
			//
			// You can specify all the values or you can default the Build and Revision Numbers 
			// by using the '*' as shown below:
			// [assembly: AssemblyVersion("1.0.*")]
			[assembly: AssemblyVersion("<#= addIn.assemblyVersion #>")]
			[assembly: AssemblyFileVersion("<#= addIn.assemblyFileversion #>")]
			[assembly: AssemblyDelaySign(false)]
			[assembly: AssemblyKeyFile("<#= keyfileName #>")]
		
		<#+
	}	
#>